apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
  labels:
    app: $CIRCLE_PROJECT_REPONAME
    team: engineering-services
    tags.datadoghq.com/env: $SECRET_VERSION
    tags.datadoghq.com/service: $CIRCLE_PROJECT_REPONAME
    tags.datadoghq.com/version: $CIRCLE_SHA1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: $CIRCLE_PROJECT_REPONAME
  template:
    metadata:
      labels:
        app: $CIRCLE_PROJECT_REPONAME
        team: {{ values.backstageOwner }}
        tags.datadoghq.com/env: $SECRET_VERSION
        tags.datadoghq.com/service: $CIRCLE_PROJECT_REPONAME
        tags.datadoghq.com/version: $CIRCLE_SHA1
    spec:
      template:
        spec:
          containers:
          - name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
            image: $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
            env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          restartPolicy: Never
---
kind: Service
apiVersion: v1
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
  labels:
    app: $CIRCLE_PROJECT_REPONAME
spec:
  selector:
    app: $CIRCLE_PROJECT_REPONAME
  ports:
    - name: "$CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION-http"
      protocol: "TCP"
      port: 443
      targetPort: 443